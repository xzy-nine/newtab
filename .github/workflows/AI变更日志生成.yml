name: AI变更日志生成

on:
  workflow_dispatch:
    inputs:
      version:
        description: '版本号(如v1.0.0）'
        required: true
        type: string
      release-id:
        description: 'Release ID（自动发布时填写）'
        required: false
        type: string
      tag:
        description: '要优化变更日志的标签（手动优化时填写）'
        required: false
        type: string
  workflow_call:
    inputs:
      version:
        description: '版本号'
        required: true
        type: string
      release-id:
        description: 'Release ID'
        required: true
        type: string
    outputs:
      ai_optimized:
        description: "是否完成AI优化"
        value: ${{ jobs.ai-changelog-generation.outputs.ai_optimized }}

jobs:
  ai-changelog-generation:
    name: AI变更日志生成
    runs-on: ubuntu-latest
    timeout-minutes: 30
    outputs:
      ai_optimized: ${{ steps.run-generator.outputs.ai_optimized }}

    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 设置Python环境
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'    
    - name: 安装Python依赖
      run: |
        pip install -r .github/workflows/ai-log-work-py/requirements.txt

    - name: 运行AI变更日志生成器
      id: run-generator
      run: |
        cd .github/workflows/ai-log-work-py
        python changelog.py \
          --version "${{ inputs.version }}" \
          ${{ inputs.release-id && format('--release-id "{0}"', inputs.release-id) || '' }} \
          ${{ inputs.tag && format('--tag "{0}"', inputs.tag) || '' }} \
          --event-name "${{ github.event_name }}" \
          --repo "${{ github.repository }}" \
          --github-token "${{ secrets.PAT }}" \
          --deepseek-api-key "${{ secrets.DEEPSEEK_API_KEY }}"
        
        # 设置输出
        if [ $? -eq 0 ]; then
          echo "ai_optimized=true" >> $GITHUB_OUTPUT
        else
          echo "ai_optimized=false" >> $GITHUB_OUTPUT
        fi

    - name: 清理临时文件
      if: always()
      run: |
        find . -name "*.tmp" -delete 2>/dev/null || true
        find . -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true
