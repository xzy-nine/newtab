name: 发布管理
on:
  workflow_run:
    workflows: ["版本检查与构建"]
    types:
      - completed
    branches:
      - main
  workflow_call:
    inputs:
      version:
        description: "版本号"
        required: true
        type: string
      changelog:
        description: "变更日志内容"
        required: true
        type: string
      build-path:
        description: "构建包路径"
        required: true
        type: string
    outputs:
      release-id:
        description: "创建的Release ID"
        value: ${{ jobs.release-management.outputs.release-id }}
      release-url:
        description: "Release页面URL"
        value: ${{ jobs.release-management.outputs.release-url }}

jobs:
  release-management:
    name: 发布管理
    runs-on: ubuntu-latest
    # 修改条件，允许在 workflow_call 时执行
    if: github.event_name == 'workflow_call' || github.event_name == 'workflow_run'
    outputs:
      release-id: ${{ steps.create-release.outputs.id }}
      release-url: ${{ steps.create-release.outputs.html_url }}

    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 设置输入参数
      id: set-input-params
      run: |
        echo "VERSION=${{ inputs.version }}" >> $GITHUB_ENV
        echo "✅ 使用工作流调用参数，版本: ${{ inputs.version }}"

    - name: 生成发布变更日志
      id: generate-release-changelog
      run: |
        # 使用传入的变更日志，确保正确解析JSON
        CHANGELOG='${{ inputs.changelog }}'
        echo "CHANGELOG<<EOF" >> $GITHUB_ENV
        echo "$CHANGELOG" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
        echo "✅ 发布变更日志准备完成"

    - name: 下载构建工件
      uses: actions/download-artifact@v4
      with:
        name: newtab-构建包-${{ inputs.version }}
        path: ./artifacts

    - name: 验证构建包
      id: verify-build-package
      run: |
        # 查找构建包文件，使用正确的文件名模式
        BUILD_FILE=$(find ./artifacts -name "newtab-${{ inputs.version }}.zip" -o -name "*.zip" | head -1)
        
        if [ -z "$BUILD_FILE" ]; then
          echo "❌ 在工件中未找到构建包"
          echo "📁 工件目录内容:"
          find ./artifacts -type f -ls
          exit 1
        fi
        
        FILE_SIZE=$(ls -lh "$BUILD_FILE" | awk '{print $5}')
        echo "✅ 构建包验证成功: $BUILD_FILE (大小: $FILE_SIZE)"
        echo "BUILD_FILE=$BUILD_FILE" >> $GITHUB_ENV

    - name: 创建Release
      id: create-release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.VERSION }}
        name: "发布 ${{ env.VERSION }}"
        body: ${{ fromJson(env.CHANGELOG) }}
        files: ${{ env.BUILD_FILE }}
        draft: false
        prerelease: false
        generate_release_notes: false
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}

    - name: 验证发布结果
      id: verify-release-result
      run: |
        if [ -n "${{ steps.create-release.outputs.id }}" ]; then
          echo "✅ Release创建成功"
          echo "🔗 Release ID: ${{ steps.create-release.outputs.id }}"
          echo "🌐 Release URL: ${{ steps.create-release.outputs.html_url }}"
          
          echo "## 🎉 发布成功" >> $GITHUB_STEP_SUMMARY
          echo "| 项目 | 值 |" >> $GITHUB_STEP_SUMMARY
          echo "|------|-----|" >> $GITHUB_STEP_SUMMARY
          echo "| 版本 | \`${{ env.VERSION }}\` |" >> $GITHUB_STEP_SUMMARY
          echo "| Release ID | \`${{ steps.create-release.outputs.id }}\` |" >> $GITHUB_STEP_SUMMARY
          echo "| Release URL | [${{ steps.create-release.outputs.html_url }}](${{ steps.create-release.outputs.html_url }}) |" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ Release创建失败"
          exit 1
        fi
